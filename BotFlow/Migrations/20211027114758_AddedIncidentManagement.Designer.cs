// <auto-generated />
using System;
using BotFlow.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BotFlow.Migrations
{
    [DbContext(typeof(PostgresDbContext))]
    [Migration("20211027114758_AddedIncidentManagement")]
    partial class AddedIncidentManagement
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("BotFlow.Models.BotFlowInstance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<string>("Contact")
                        .HasColumnType("text");

                    b.Property<Guid?>("CurrentStageId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStageId");

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("BotFlow.Models.Call", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("IncidentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IncidentId");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("BotFlow.Models.Incident", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CallBackNo")
                        .HasColumnType("text");

                    b.Property<string>("Contact")
                        .HasColumnType("text");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("BotFlow.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("boolean");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("BotFlow.Models.PersonCall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CallId")
                        .HasColumnType("uuid");

                    b.Property<string>("CallStatus")
                        .HasColumnType("text");

                    b.Property<Guid>("PersonID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("PersonCalls");
                });

            modelBuilder.Entity("BotFlow.Models.Stage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DisplayMessage")
                        .HasColumnType("text");

                    b.Property<bool>("IsInitital")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("BotFlow.Models.StageConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CurrentStageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("NextStageId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStageId");

                    b.HasIndex("NextStageId");

                    b.ToTable("StageConfig");
                });

            modelBuilder.Entity("BotFlow.Models.BotFlowInstance", b =>
                {
                    b.HasOne("BotFlow.Models.Stage", "CurrentStage")
                        .WithMany()
                        .HasForeignKey("CurrentStageId");

                    b.Navigation("CurrentStage");
                });

            modelBuilder.Entity("BotFlow.Models.Call", b =>
                {
                    b.HasOne("BotFlow.Models.Incident", "Incident")
                        .WithMany()
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incident");
                });

            modelBuilder.Entity("BotFlow.Models.StageConfig", b =>
                {
                    b.HasOne("BotFlow.Models.Stage", "CurrentStage")
                        .WithMany()
                        .HasForeignKey("CurrentStageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BotFlow.Models.Stage", "NextStage")
                        .WithMany()
                        .HasForeignKey("NextStageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentStage");

                    b.Navigation("NextStage");
                });
#pragma warning restore 612, 618
        }
    }
}
